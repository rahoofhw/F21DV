Exercise 21: Add an axis to the top and to the right of the bar chart (also displays an axis along the top and along the right of the chart)




<!DOCTYPE html>
<html>
  <meta charset="utf-8" />
    <body>
         <script src='https://d3js.org/d3.v7.min.js'></script>
        <button onclick="update(data1,'#69b3a2')">Variable 1</button>
        <button onclick="update(data2,'red')">Variable 2</button>
        <button onclick="update(data3,'blue')">Variable 3</button>
        <script>
            // create 2 data_set
            const data1 = [{group: "A", value: 5},{group: "B", value: 19},{group: "C", value: 9}];
            const data2 = [{group: "A", value: 10},{group: "B", value: 2},{group: "C", value: 16}];
            const data3 = [{group: "A", value: 6},{group: "B", value: 18},{group: "C", value: 15}];
            // set the dimensions and margins of the graph
            const margin = {top: 30, right: 30, bottom: 70, left: 60};
            const width = 460 - margin.left - margin.right;
            const height = 400 - margin.top - margin.bottom;
            // append the svg object to the body of the page
            var svg = d3.select('body').append('div') .append("svg").attr("width", width + margin.left + margin.right)
            .attr("height",height +margin.top +margin.bottom).append("g").attr("transform","translate(" + margin.left + "," + margin.top + ")");
            // X axis
            var x = d3.scaleBand() .range([ 0, width ]).domain(data1.map(function(d) { return d.group; })) .padding(0.2);
            svg.append("g") .call(d3.axisTop(x))
            svg.append("g") .attr("transform", "translate(0," + height + ")") .call(d3.axisBottom(x))
            // Add Y axis
            var y = d3.scaleLinear().domain([0, 20]).range([ height, 0]);
            svg.append("g").attr("class", "myYaxis").call(d3.axisLeft(y));
            svg.append("g") .attr("transform", "translate("+width+",0)").attr("class", "myYaxis").call(d3.axisRight(y));
            
            // A function that create / update the plot for a given variable:
            function update(data,clr) {
            var u = svg.selectAll("rect").data(data)
            u .enter().append("rect").on("mouseover", onMouseOver).on("mouseout", onMouseOut).merge(u).transition().duration(1000)
            .attr("x", function(d) { return x(d.group); }) .attr("y", function(d) { return y(d.value); })
            .attr("width", x.bandwidth()).attr("height", function(d) { return height - y(d.value); }).attr("fill", clr);
            }

             // add value text directly above bar 
            function onMouseOver(d, i) {
                svg.append("text").attr('class', 'val').attr('x', function() {return x(i.group);})
                .attr('y', function() {return 0;}).text( function(d) { return i.value; } ); 
            }
            
            // removing the text after mouseout
            function onMouseOut(d, i) {
                d3.selectAll('.val').remove()
            }
            // Initialize the plot with the first dataset
            update(data1,'#69b3a2')
        </script>
    </body>
</html>










