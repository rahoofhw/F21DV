
<!--
https://covid.ourworldindata.org/data/owid-covid-data.csv
https://github.com/owid/covid-19-data/tree/master/public/data
-->

<!--https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/owid-covid-data.csv-->

<!DOCTYPE html>
<html>
  <meta charset="utf-8" />
  <body>
        <label>Continents :</label>
        <select id="continent_select" onchange = "selectContinent(event)">
            <option selected desabled> select</option> 
        </select>
        <label>Countries :</label>
        <select id="country_select" onchange = "selectCountry(event)">
                <option selected desabled> select</option> 
        </select>

        <div id ="canvas1"></div>
        <div id ="canvas2"></div>
        <div id ="canvas3"></div>

        <script src='https://d3js.org/d3.v7.min.js'></script>
        <script>
        console.log("starting ---------");
            const csvfile = 'https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/owid-covid-data.csv';
            var dataset ;
            var unique_continents= new Array();
            var unique_countries= new Array();
            var continent
            const xSize = 500; const ySize = 500; const margin = 40;
            const xMax = xSize - margin*2;const yMax = ySize - margin*2;
            const canvas1 = d3.select("#canvas1").append("svg").attr('width', xSize ).attr('height', ySize ).append("g")
                  .attr("transform","translate(" + margin + "," + margin + ")").style("border","1px solid black");
            const canvas2 = d3.select("#canvas2").append("svg").attr('width', xSize ).attr('height', ySize ).append("g")
                  .attr("transform","translate(" + margin + "," +margin + ")").style("border","1px solid black");
             const canvas3 = d3.select("#canvas3").append("svg").attr('width', xSize ).attr('height', ySize ).append("g")
                  .attr("transform","translate(" + margin + "," +margin + ")").style("border","1px solid black");
                  
            d3.csv(csvfile).then(function(data) {
                dataset = data;
                        console.log("starting ---------",data.length);
                var continents=  d3.map(data, function(d){return d.continent;});
                unique_continents= continents.filter((item, i, ar) => ar.indexOf(item) === i);
                setSelectContinents();

            });
          
            function setSelectContinents(){
                console.log("in setcontinents")
                let continent_select = document.getElementById('continent_select');
                unique_continents.forEach(option =>{
                    if(option){
                        continent_select.options.add(new Option(option, option, option.selected));
                    }
                });
            }
            function setSelectCountry(){
                let country_select = document.getElementById('country_select');
                console.log("in setSelectCountry",country_select.options)

                country_select.innerText = ' <option selected desabled> select</option> ';
                unique_countries.forEach(option =>{
                    if(option){
                        country_select.options.add(new Option(option, option, option.selected));
                    }
                });
                
            }
            function selectContinent(event){
                console.log("selectContinent",event,event.target.value);
                var continent= event.target.value ; var key= 'continent';
                var key1 = 'date'; var key2 = 'total_cases';key3 = 'gdp_per_capita';
                var dataset1=  dataset.filter(function (d) { return (d[key] == continent)});
                 
               
                const filtered= d3.map(dataset1, function(d){ 
                    if(d[key1]&& d[key2]) {return   {x:  new Date(d[key1]), y: parseInt(d[key2]),z:d.continent,t:d.location}}
                    return   {x:  0, y:0}
                });
                const data= filtered.filter(function (d) { return (d.x != 0) && (!isNaN(d.y)); });
                draw(canvas1,data,key);
                
                const incomeExtent = d3.extent( dataset1, d=>{ return d[key3] } );

                var bar_width =parseInt((incomeExtent[1]-incomeExtent[0])/20);
                const filtered2= d3.map(dataset1, function(d){ 
                    if(d[key3]&& d[key2]) {return   {x:Math.floor(parseInt(d[key3])/bar_width)*bar_width, y: parseInt(d[key2]),z:d.continent,t:d.location}}
                    return   {x:  0, y:0}
                });
                const data2= filtered2.filter(function (d) { return (d.x != 0) && (!isNaN(d.y)); });
                draw(canvas2,data2,key);
                
                var key4 ='total_vaccinations';
                const vaExtent = d3.extent( dataset1, d=>{ return d[key4] } );
                var bar_width_v =parseInt((vaExtent[1]-vaExtent[0])/20);
                const filtered3= d3.map(dataset1, function(d){ 
                    if(d[key4]&& d[key2]) {return   {x:Math.floor(parseInt(d[key4])/bar_width_v)*bar_width_v, y: parseInt(d[key2]),z:d.continent,t:d.location}}
                    return   {x:  0, y:0}
                });
                const data3= filtered3.filter(function (d) { return (d.x != 0) && (!isNaN(d.y)); });
                draw(canvas3,data3,key);
                
                 var countries=  d3.map(dataset1, function(d){return d['location'];});
                                console.log("countries data ",countries.length);

                 unique_countries= countries.filter((item, i, ar) => ar.indexOf(item) === i);
                                                console.log("countries data ",unique_countries.length);
                setSelectCountry();
            }
 	        function selectCountry(event){
                console.log("selectContinent",event,event.target.value);
                var continent= event.target.value ; var key= 'location';
                var key1 = 'date'; var key2 = 'total_cases'; key3 = 'gdp_per_capita';
                var dataset1=  dataset.filter(function (d) { return (d[key] == continent)});
                const filtered= d3.map(dataset1, function(d){ 
                    if(d[key1]&& d[key2]) {return   {x:  new Date(d[key1]), y: parseInt(d[key2]),z:d.continent,t:d.location}}
                    return   {x:  0, y:0}
                });
                const data= filtered.filter(function (d) { return (d.x != 0) && (!isNaN(d.y)); });
                draw(canvas1,data,key);
                
                
                   const incomeExtent = d3.extent( dataset1, d=>{ return d[key3] } );

                var bar_width =parseInt((incomeExtent[1]-incomeExtent[0])/20);
                const filtered2= d3.map(dataset1, function(d){ 
                    if(d[key3]&& d[key2]) {return   {x:Math.floor(parseInt(d[key3])/bar_width)*bar_width, y: parseInt(d[key2]),z:d.continent,t:d.location}}
                    return   {x:  0, y:0}
                });
                const data2= filtered2.filter(function (d) { return (d.x != 0) && (!isNaN(d.y)); });
                draw(canvas2,data2,key);
            }
            
            function draw(svg,data,key){
                console.log("draw::",data)
                svg.selectAll('*').remove();
                const xSize = 500; const ySize = 500; const margin = 40;
                const xMax = xSize - margin*2;const yMax = ySize - margin*2;

                const xExtent = d3.extent( data, d=>{ return d.x } );
                const yExtent = d3.extent( data, d=>{ return d.y } );
                
                console.log(xExtent,yExtent);
                // X Axis
                const x = d3.scaleLinear().domain([ xExtent[0], xExtent[1] ]).range([0, xMax]);
                svg.append("g").attr("transform", "translate(0," + yMax + ")").call(d3.axisBottom(x)); 
                svg.append("g").call(d3.axisTop(x));
                
                // Y Axis
                const y = d3.scaleLinear().domain([ yExtent[0], yExtent[1] ]).range([ yMax, 0]);
                svg.append("g").call(d3.axisLeft(y));
                svg.append("g").attr("transform", `translate(${yMax},0)`).call(d3.axisRight(y));
                
                var myColor = d3.scaleOrdinal().domain(unique_continents).range(d3.schemeSet3);

                var circle= svg.selectAll("dot").data(data).enter().append("circle").attr("cx", function (d) { return x(d.x);} )
                .attr("cy", function (d) { return y(d.y) } ).attr("r", 3)
                .style("fill", function (d) { return myColor(d.z);}).on("mouseover", function(e,d){
                    if(key =='continent'){
                        highlight(d ,myColor(d.z));
                    }else  if(key =='location'){
                        highlight(d ,myColor(d.z));
                    }
                    
                }).on("mouseout", function(e,d){
                    removeHighlights(myColor(d.z));
                });
            }
            
            function highlight(d,color){
                canvas1.selectAll('circle').style("fill",function(a){if(a.t==d.t){return "red";} return color});
                canvas2.selectAll('circle').style("fill",function(a){if(a.t==d.t){return "red";} return color});
                canvas3.selectAll('circle').style("fill",function(a){if(a.t==d.t){return "red";} return color});
            }
            function removeHighlights(color){
                canvas1.selectAll('circle').style("fill",function(a){ return color });
                canvas2.selectAll('circle').style("fill",function(a){ return color });
                 canvas3.selectAll('circle').style("fill",function(a){ return color });
            }
        </script>
  </body>
</html>



